<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<view-resolvers>
		<jsp prefix="/WEB-INF/views/" suffix=".jsp" />
	</view-resolvers>


	<!-- 1. Spring Interceptor는 아래처럼 설정파일에 Bean 으로 등록하거나 -->
	<beans:bean id="sampleInterceptor" class="org.zerock.myapp.interceptor.SampleInterceptor" />
	<beans:bean id="sampleInterceptor2" class="org.zerock.myapp.interceptor.SampleInterceptor2" />
	<beans:bean id="sampleInterceptor3" class="org.zerock.myapp.interceptor.SampleInterceptor3" />

	<!-- 2. @Component 같은 어노테이션을 통해, 자동으로 Spring Beans Container에 Bean 으로 등록되어 있어야 함. -->
	<!-- <context:component-scan base-package="org.zerock.myapp.interceptor" /> -->


	<interceptors>

		<interceptor>
			<!-- <mapping path="/sample/do*" /> -->
			<!-- <mapping path="/**/do*" /> -->
			<!-- <mapping path="/**/*" /> -->

			<!-- OK : wildcard character '?' useful -->
			<!-- <mapping path="/sample/do?" /> -->

			<mapping path="/sample/doA" />
			<mapping path="/sample/doB" />
			<mapping path="/sample/doC" />

			<beans:ref bean="sampleInterceptor" />
		</interceptor>

		<interceptor>
			<mapping path="/sample/doB" />
			<mapping path="/sample/doC" />

			<beans:ref bean="sampleInterceptor2"/>
		</interceptor>

		<interceptor>
			<mapping path="/sample/doD" />

			<beans:ref bean="sampleInterceptor3"/>
		</interceptor>

		<interceptor>
			<mapping path="/user/loginPost" />

			<beans:ref bean="loginInterceptor"/>	
		</interceptor>

		<interceptor>
			<mapping path="/user/logout" />

			<beans:ref bean="logoutInterceptor"/>	
		</interceptor>

		<interceptor>
			<mapping path="/board/*" />

			<beans:ref bean="authInterceptor"/>	
		</interceptor>

	</interceptors>

	<view-controller path="/user/login" 	view-name="user/login" 		status-code="200"/>
	
	<view-controller path="/board/list" 	view-name="board/list" 		status-code="200"/>
	<view-controller path="/board/register" view-name="board/register" 	status-code="200"/>
	<view-controller path="/board/get" 		view-name="board/get" 		status-code="200"/>
	<view-controller path="/board/modify" 	view-name="board/modify" 	status-code="200"/>
	<view-controller path="/board/remove" 	view-name="board/remove" 	status-code="200"/>


	<context:component-scan base-package="org.zerock.myapp.controller" />
	<context:component-scan base-package="org.zerock.myapp.exception" />
	<context:component-scan base-package="org.zerock.myapp.interceptor" />
	
</beans:beans>
