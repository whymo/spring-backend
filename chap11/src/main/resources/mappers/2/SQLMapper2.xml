<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sql2mapper">

    <!-- CRUD의 기본적인 태그를 지니고 있다. -->

    <!-- 태그의 id는 주로 실행시킨 메소드의 이름을 그대로 사용한다. (맘대로 작성해도 ok) -->
    <!-- id의 값은 mapper 파일 내에서 유니크해야 한다. -->

    <!-- resulType은 반환될 구체타입을 지정해 주면 된다. : List타입을 반환하지만 실제로는 List<BoardVO>이기에 BoardVO의 FQCN을 지정해주면 된다. -->
    <!-- 즉, List<E>를 반환한다면 resulType에 <E>를 지정해 주면 된다. -->

    <!-- parameterType는 전송 받을 값을 지정해 준다. -->
    <!-- 바인딩 변수가 2개일 경우에는 map을 지정해줘야 한다. -->
    <!-- ex.  #{employee_id} 값 -->

    <!-- ========================================================================================= -->

    <!-- 2. email이 지정한 단어로 시작하고, salary가 지정한 값을 넘는 사원 출력하는 쿼리 등록 -->
    <!-- '%'||#{email}||'%'는 지정한 #{email} 값이 포함되어 있으면 모두 출력하는 것이고 -->
    <!-- #{email}||'%'는 지정한 #{email} 값으로 시작하는 이메일을 반환한다. -->
    <!-- #{email}에 A%를 넣어서, A로 시작하는 이메일을 출력할 수도 있으나 이는 보안상 좋지 못하다. -->
    <select 
        id="DQL2" 
        resultType="org.zerock.myapp.domain.EmployeeVO" 
        parameterType="java.util.Map">

        SELECT * 
            FROM employees 
            WHERE email LIKE #{email}
            AND salary > #{salary}

    </select>

    <!-- ========================================================================================= -->

</mapper>